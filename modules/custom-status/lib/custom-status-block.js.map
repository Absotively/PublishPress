{"version":3,"sources":["custom-status-block.jsx"],"names":["__","wp","i18n","PluginPostStatusInfo","editPost","registerPlugin","plugins","withSelect","withDispatch","data","compose","SelectControl","components","statuses","window","PPCustomStatuses","map","s","label","name","value","slug","getStatusLabel","find","sideEffectL10nManipulation","status","statusLabel","setTimeout","node","document","querySelector","innerText","dataset","ppInnerTextUpdated","setInterval","select","getEditedPostAttribute","PPCustomPostStatusInfo","onUpdate","plugin","dispatch","icon","render"],"mappings":"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","sourcesContent":["/**\n * ------------------------------------------------------------------------------\n * Based on Edit Flow\n * Author: Daniel Bachhuber, Scott Bressler, Mohammad Jangda, Automattic, and\n * others\n * Copyright (c) 2009-2019 Mohammad Jangda, Daniel Bachhuber, et al.\n * ------------------------------------------------------------------------------\n */\n\nlet {__} = wp.i18n;\nlet {PluginPostStatusInfo} = wp.editPost;\nlet {registerPlugin} = wp.plugins;\nlet {withSelect, withDispatch} = wp.data;\nlet {compose} = wp.compose;\nlet {SelectControl} = wp.components;\n\n/**\n * Map Custom Statuses as options for SelectControl\n */\nlet statuses = window.PPCustomStatuses.map(s => ({label: s.name, value: s.slug}));\nlet getStatusLabel = slug => statuses.find(s => s.value === slug).label;\n\n/**\n * Hack :(\n *\n * @see https://github.com/WordPress/gutenberg/issues/3144\n *\n * @param status\n */\nlet sideEffectL10nManipulation = status => {\n    let statusLabel = getStatusLabel(status);\n\n    setTimeout(() => {\n        let node = document.querySelector('.editor-post-save-draft');\n\n        if (!node) {\n            node = document.querySelector('.editor-post-switch-to-draft');\n        }\n\n        if (node) {\n            document.querySelector('.editor-post-save-draft, .editor-post-switch-to-draft').innerText = `${__('Save as')} ${statusLabel}`;\n            node.dataset.ppInnerTextUpdated = true;\n        }\n    }, 100);\n};\n\n/**\n * Hack :(\n * We need an interval because the DOM element is removed by autosave and redered back after finishing.\n *\n * @see https://github.com/WordPress/gutenberg/issues/3144\n */\nsetInterval(() => {\n    let status = wp.data.select('core/editor').getEditedPostAttribute('status');\n    let statusLabel = getStatusLabel(status);\n    let node = document.querySelector('.editor-post-save-draft');\n\n    if (!node) {\n        node = document.querySelector('.editor-post-switch-to-draft');\n    }\n\n    if (node && !node.dataset.ppInnerTextUpdated) {\n        document.querySelector('.editor-post-save-draft, .editor-post-switch-to-draft').innerText = `${__('Save as')} ${statusLabel}`;\n        node.dataset.ppInnerTextUpdated = true;\n    }\n}, 200);\n\n/**\n * Custom status component\n * @param object props\n */\nlet PPCustomPostStatusInfo = ({onUpdate, status}) => (\n    <PluginPostStatusInfo\n        className={`publishpress-extended-post-status publishpress-extended-post-status-${status}`}\n    >\n        <h4>{status !== 'publish' ? __('Post Status', 'publishpress') : __('Post Status Disabled.', 'publishpress')}</h4>\n\n        {status !== 'publish' ? <SelectControl\n            label=\"\"\n            value={status}\n            options={statuses}\n            onChange={onUpdate}\n        /> : null}\n\n        <small className=\"publishpress-extended-post-status-note\">\n            {status !== 'publish' ? __(`Note: this will override all status settings above.`, 'publishpress') : __('To select a custom status, please unpublish the content first.', 'publishpress')}\n        </small>\n    </PluginPostStatusInfo>\n);\n\nlet plugin = compose(\n    withSelect((select) => ({\n        status: select('core/editor').getEditedPostAttribute('status')\n    })),\n    withDispatch((dispatch) => ({\n        onUpdate (status) {\n            dispatch('core/editor').editPost({status});\n            sideEffectL10nManipulation(status);\n        }\n    }))\n)(PPCustomPostStatusInfo);\n\nregisterPlugin('publishpress-custom-status-block', {\n    icon: 'admin-site',\n    render: plugin\n});\n"],"file":"custom-status-block.js"}